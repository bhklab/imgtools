name: bob-the-builder

# only run on pushes to main or pull requests
on:
  push:
    # push to any branch *
    branches: '*'
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1

  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pip install
        run: pip install .
      - name: Run tests
        run: pip install pytest && pytest tests -v

  cd:
    permissions:
        contents: write
        packages: write
        issues: write
        pull-requests: write

    needs: [tests]

    # if pulling to main, deploy to PyPI
    if: github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # outputs:
    #   released: ${{ steps.release.outputs.released }}
    #   version: ${{ steps.release.outputs.version }}
    #   tag: ${{ steps.release.outputs.tag }}

    # Define job steps
    steps:
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Check-out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

  pip-squeak:
    needs: cd
    # if: needs.cd.outputs.released == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code with tag # ${{ needs.cd.outputs.tag }}
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ needs.cd.outputs.tag }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Package Builder
        run:
          python3 -m pip install build

      - name: Build package
        run:
          python3 -m build --sdist --wheel --outdir dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          user: ${{ secrets.pypi_token }}
          password: ${{ secrets.pypi_api }}


  does-the-pip-squeak:
    needs: pip-squeak
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12", "3.11", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install using PyPi
        run: |
          pip install med-imagetools
          autopipeline
        # pip install med-imagetools ==${{ needs.cd.outputs.version }}